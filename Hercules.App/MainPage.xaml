<Page x:Class="Hercules.App.MainPage" IsTabStop="false" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:im="using:Microsoft.Xaml.Interactions.Media"
    xmlns:e="using:Hercules.App.Modules.Editor.Views"
    xmlns:m="using:Hercules.App.Modules.Mindmaps.Views"
    xmlns:gpc="using:GP.Windows.UI.Controls"
    xmlns:gpi="using:GP.Windows.UI.Interactivity"
    xmlns:controls="using:Hercules.App.Controls"
    xmlns:modelLayout="using:Hercules.Model.Layouting.Default"
    mc:Ignorable="d"
    IsEnabled="{Binding LoadingManager.IsLoading, Source={StaticResource ViewModelLocator}, Converter={StaticResource BooleanInverseConverter}}"
    DataContext="{Binding Editor, Source={StaticResource ViewModelLocator}}">

    <Page.Resources>
        <Storyboard x:Key="ShowListStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MindmapsContainer">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideListStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MindmapsContainer">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" RequestedTheme="Light">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource ThemeMainBrush}" RequestedTheme="Dark">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <AppBarButton x:Uid="AppBarButton_ListMindmaps" RequestedTheme="Dark" Icon="List" Click="AppBarButton_Click" Label="Mindmaps" />

                <StackPanel Orientation="Horizontal" Visibility="{Binding Document, Converter={StaticResource NotNullVisibilityConverter}, FallbackValue=Collapsed}">
                    <AppBarSeparator />

                    <AppBarButton x:Uid="AppBarButton_Export" Icon="Save">
                        <AppBarButton.Flyout>
                            <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource LightMenuFlyoutPresenterStyle}">
                                <MenuFlyoutItem x:Uid="AppBarButton_ExportHtml" Text="Html"
                                    Command="{Binding ExportHtmlCommand}" />
                                <MenuFlyoutItem x:Uid="AppBarButton_ExportImage" Text="Image"
                                    Command="{Binding ExportImageCommand}" />
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton x:Uid="AppBarButton_ChangeIcon" IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=false}">
                        <AppBarButton.Flyout>
                            <controls:MindmapFlyout FlyoutPresenterStyle="{StaticResource LightFlyoutPresenterStyle}">
                                <e:EditIconView Renderer="{Binding RendererFactory.Current}" Document="{Binding Document}" />
                            </controls:MindmapFlyout>
                        </AppBarButton.Flyout>
                        <TextBlock TextAlignment="Center" FontSize="20" Text="&#xEB9F;" FontFamily="Segoe MDL2 Assets" />
                    </AppBarButton>
                    <AppBarButton x:Uid="AppBarButton_ChangeColor" IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=true}">
                        <AppBarButton.Flyout>
                            <controls:MindmapFlyout FlyoutPresenterStyle="{StaticResource LightFlyoutPresenterStyle}">
                                <e:EditColorView Renderer="{Binding RendererFactory.Current}" Document="{Binding Document}" />
                            </controls:MindmapFlyout>
                        </AppBarButton.Flyout>
                        <TextBlock TextAlignment="Center" FontSize="20" Text="&#xE2B1;" FontFamily="Segoe MDL2 Assets" />
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton x:Uid="AppBarButton_Undo" Icon="Undo"
                        Command="{Binding UndoCommand}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="Z" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>

                    <AppBarButton x:Uid="AppBarButton_Redo" Icon="Redo"
                        Command="{Binding RedoCommand}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="Y" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>
                </StackPanel>
            </StackPanel>

            <StackPanel x:Uid="AppBarButton_RemoveNode" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding Document, Converter={StaticResource NotNullVisibilityConverter}, FallbackValue=Collapsed}">
                <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotRootToBooleanConverter}, FallbackValue=false}" Icon="Delete"
                    Command="{Binding RemoveCommand}">
                    <i:Interaction.Behaviors>
                        <gpi:CommandShortcutBehavior Invoking="RemoveButton_Invoking" RequiresControlModifier="False" Key="Delete" />
                        <gpi:CommandShortcutBehavior Invoking="RemoveButton_Invoking" RequiresControlModifier="False" Key="Back" />
                    </i:Interaction.Behaviors>
                </AppBarButton>

                <Rectangle Fill="{ThemeResource ApplicationForegroundThemeBrush}" Width="1" Margin="20" HorizontalAlignment="Stretch" />

                <AppBarButton x:Uid="AppBarButton_AddSibling" Style="{StaticResource AppBarButtonStyleSibling}" IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotRootToBooleanConverter}, FallbackValue=false}"
                    Command="{Binding AddSiblingCommand}">
                    <i:Interaction.Behaviors>
                        <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="N" />
                    </i:Interaction.Behaviors>
                </AppBarButton>

                <AppBarButton x:Uid="AppBarButton_AddChild" Style="{StaticResource AppBarButtonStyleChild}" IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=false}"
                    Command="{Binding AddChildCommand}" >
                    <i:Interaction.Behaviors>
                        <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="M" />
                    </i:Interaction.Behaviors>
                </AppBarButton>
            </StackPanel>
        </Grid>

        <SplitView Grid.Row="1" DisplayMode="CompactOverlay" IsPaneOpen="False" CompactPaneLength="68" x:Name="SplitView">
            <i:Interaction.Behaviors>
                <ic:DataTriggerBehavior Binding="{Binding IsPaneOpen, ElementName=SplitView}">
                    <ic:DataTriggerBehavior.Value>
                        <x:Boolean>True</x:Boolean>
                    </ic:DataTriggerBehavior.Value>
                    <im:ControlStoryboardAction Storyboard="{StaticResource ShowListStoryboard}"/>
                </ic:DataTriggerBehavior>
                <ic:DataTriggerBehavior Binding="{Binding IsPaneOpen, ElementName=SplitView}">
                    <ic:DataTriggerBehavior.Value>
                        <x:Boolean>False</x:Boolean>
                    </ic:DataTriggerBehavior.Value>
                    <im:ControlStoryboardAction Storyboard="{StaticResource HideListStoryboard}"/>
                </ic:DataTriggerBehavior>
            </i:Interaction.Behaviors>

            <SplitView.Pane>
                <Grid DataContext="{Binding Mindmaps, Source={StaticResource ViewModelLocator}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Button x:Uid="Mindmaps_AddButton" TabIndex="-1" Padding="0,10,0,10" Margin="0,20,0,20" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Top" Foreground="{StaticResource ThemeMainBrush}" Style="{StaticResource ThemeButton}">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Viewbox Width="64" Height="26">
                                    <SymbolIcon Symbol="Add" />
                                </Viewbox>
                            </Grid>

                            <TextBlock x:Uid="Mindmaps_AddText" Margin="5,0,0,0" FontSize="16" Text="Add Mindmap" />
                        </StackPanel>
                        <Button.Flyout>
                            <controls:MindmapFlyout>
                                <m:EnterNameView />
                            </controls:MindmapFlyout>
                        </Button.Flyout>
                    </Button>

                    <Grid x:Name="MindmapsContainer" Grid.Row="1" Margin="0,5,0,0" Opacity="0" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderBrush="LightGray" BorderThickness="0,0,0,1" Padding="10,0,0,6">
                            <TextBlock x:Uid="Mindmaps_Header" Foreground="Black" Text="Mindmaps"
                                FontSize="20" 
                                FontWeight="Bold" />
                        </Border>

                        <ListBox Grid.Row="1" ItemContainerStyle="{StaticResource ThemeListBoxItemStyle}" x:Name="List" SelectedItem="{Binding SelectedMindmap, Mode=TwoWay}"  ItemsSource="{Binding Mindmaps}" Loaded="ListBox_Loaded">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="Root">
                                        <FlyoutBase.AttachedFlyout>
                                            <controls:MindmapFlyout Placement="Bottom">
                                                <m:RenameView MindmapItem="{Binding}" />
                                            </controls:MindmapFlyout>
                                        </FlyoutBase.AttachedFlyout>
                                        
                                        <Grid RightTapped="Grid_RightTapped" Background="Transparent">
                                            <FlyoutBase.AttachedFlyout>
                                                <MenuFlyout>
                                                    <MenuFlyoutItem x:Uid="Mindmaps_Delete" Text="Rename" 
                                                        DataContext="{Binding ElementName=Root}" x:Name="RenameButton" Click="RenameButton_Click" />
                                                    <MenuFlyoutSeparator />
                                                    <MenuFlyoutItem x:Uid="Mindmaps_Rename" Text="Delete"
                                                        Command="{Binding Path=Mindmaps.DeleteCommand, Source={StaticResource ViewModelLocator}, ElementName=List}" 
                                                        CommandParameter="{Binding}" />
                                                </MenuFlyout>
                                            </FlyoutBase.AttachedFlyout>

                                            <StackPanel>
                                                <TextBlock Text="{Binding Title}" FontSize="15" TextTrimming="WordEllipsis" />

                                                <StackPanel Orientation="Horizontal" Opacity="0.7" Margin="0,2">
                                                    <TextBlock x:Uid="Mindmaps_LastUpdate" FontSize="13"
                                                        Text="Modified:"
                                                        TextAlignment="Left"
                                                        TextWrapping="NoWrap" Margin="0,0,4,0" />
                                                    <TextBlock FontSize="13"
                                                        Text="{Binding LastUpdateText}" 
                                                        TextAlignment="Left"
                                                        TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid>
                    <i:Interaction.Behaviors>
                        <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Left" Invoked="MoveLeftCommand_Invoked" />
                        <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Right" Invoked="MoveRightCommand_Invoked" />
                        <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Up" Invoked="MoveTopCommand_Invoked" />
                        <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Down" Invoked="MoveBottomCommand_Invoked" />
                        <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="T" Invoked="EditTextCommand_Invoked" />
                    </i:Interaction.Behaviors>

                    <gpc:TiledBackground TileSize="60" />

                    <controls:Mindmap Document="{Binding Document}" RendererFactory="{Binding RendererFactory}" x:Name="Mindmap">
                        <controls:Mindmap.Layout>
                            <modelLayout:DefaultLayout ElementMargin="10" HorizontalMargin="50" />
                        </controls:Mindmap.Layout>
                        <i:Interaction.Behaviors>
                            <controls:NodeMovingBehavior />
                        </i:Interaction.Behaviors>
                    </controls:Mindmap>

                    <Grid DataContext="{Binding LoadingManager, Source={StaticResource ViewModelLocator}}"
                        Visibility="{Binding IsLoading, Converter={StaticResource VisibleWhenTrueConverter}}">

                        <Border Background="White" Opacity="0.9" IsHitTestVisible="True" />

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ProgressRing Margin="10" VerticalAlignment="Center" IsActive="True" />

                            <TextBlock x:Uid="Editor_Busy" FontSize="24" Text="Busy..." />
                        </StackPanel>
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>
</Page>
