<Page x:Class="Hercules.App.MainPage" IsTabStop="false" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:im="using:Microsoft.Xaml.Interactions.Media"
    xmlns:m="using:Hercules.App.Modules.Mindmaps.Views"
    xmlns:local="using:Hercules.App"
    xmlns:controls="using:Hercules.App.Controls"
    xmlns:modelLayout="using:Hercules.Model.Layouting.Default"
    xmlns:gpc="using:GP.Windows.UI.Controls"
    xmlns:gpi="using:GP.Windows.UI.Interactivity"
    mc:Ignorable="d"
    DataContext="{Binding Editor, Source={StaticResource ViewModelLocator}}">
    
    <Page.Resources>
        <Storyboard x:Key="StoryboardShow">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Mindmaps">
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardHide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Mindmaps">
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="-300"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <SplitView>
        <SplitView.Pane>
            <m:MindmapsView />
        </SplitView.Pane>
        <SplitView.Content>
            <Grid x:Name="MainGrid" Grid.Row="1">
                <i:Interaction.Behaviors>
                    <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Left" Invoked="MoveLeftCommand_Invoked" />
                    <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Right" Invoked="MoveRightCommand_Invoked" />
                    <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Up" Invoked="MoveTopCommand_Invoked" />
                    <gpi:CommandShortcutBehavior RequiresShiftModifier="True" Key="Down" Invoked="MoveBottomCommand_Invoked" />
                </i:Interaction.Behaviors>

                <gpc:TiledBackground TileSize="60" />

                <controls:Mindmap Document="{Binding Document}"  RendererFactory="{Binding RendererFactory}" x:Name="Mindmap">
                    <controls:Mindmap.Layout>
                        <modelLayout:DefaultLayout ElementMargin="10" HorizontalMargin="50" />
                    </controls:Mindmap.Layout>
                </controls:Mindmap>
            </Grid>
        </SplitView.Content>
    </SplitView>
    
    
    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <AppBar IsOpen="True" IsSticky="True" Style="{StaticResource AppBarStyleNoClose}" Closed="BottomBar_Closed" Height="60">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal">
                    <AppBarToggleButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=false}" Icon="List" x:Name="ListButton"
                        AutomationProperties.AccessKey="CTRL + M"
                        AutomationProperties.Name="Mindmaps" x:Uid="AppBarButtonListMindmaps">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="M" />

                            <ic:EventTriggerBehavior EventName="Checked">
                                <im:ControlStoryboardAction Storyboard="{StaticResource StoryboardShow}"/>
                            </ic:EventTriggerBehavior>
                            <ic:EventTriggerBehavior EventName="Unchecked">
                                <im:ControlStoryboardAction Storyboard="{StaticResource StoryboardHide}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </AppBarToggleButton>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding Document, Converter={StaticResource NotNullVisibilityConverter}, FallbackValue=Collapsed}">
                        <Rectangle Fill="{ThemeResource ApplicationForegroundThemeBrush}" Width="1" Margin="20" HorizontalAlignment="Stretch" />

                        <AppBarButton Icon="Setting">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Rename" />
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem Text="Export" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        
                        <Rectangle Fill="{ThemeResource ApplicationForegroundThemeBrush}" Width="1" Margin="20" HorizontalAlignment="Stretch" />

                        <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=false}" Icon="Favorite" x:Name="IconButton"
                            AutomationProperties.AccessKey="CTRL + I"
                            AutomationProperties.Name="Change Icon" x:Uid="AppBarButtonChangeIcon">
                            <i:Interaction.Behaviors>
                                <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="I" />
                            </i:Interaction.Behaviors>
                            <AppBarButton.Flyout>
                                <controls:MindmapFlyout>
                                    <local:EditIconView Renderer="{Binding RendererFactory.Current}" Document="{Binding Document}" />
                                </controls:MindmapFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=true}" Icon="Bold" x:Name="ColorButton"
                            AutomationProperties.AccessKey="CTRL + O"
                            AutomationProperties.Name="Change Color" x:Uid="AppBarButtonChangeColor">
                            <i:Interaction.Behaviors>
                                <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="O" />
                            </i:Interaction.Behaviors>
                            <AppBarButton.Flyout>
                                <controls:MindmapFlyout>
                                    <local:EditColorView Renderer="{Binding RendererFactory.Current}" Document="{Binding Document}" />
                                </controls:MindmapFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>

                        <Rectangle Fill="{ThemeResource ApplicationForegroundThemeBrush}" Width="1" Margin="20" HorizontalAlignment="Stretch" />

                        <AppBarButton Icon="Undo"
                            Command="{Binding UndoCommand}"
                            AutomationProperties.AccessKey="CTRL + Z"
                            AutomationProperties.Name="Undo" x:Uid="AppBarButtonUndo">
                            <i:Interaction.Behaviors>
                                <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="Z" />
                            </i:Interaction.Behaviors>
                        </AppBarButton>

                        <AppBarButton Icon="Redo"
                            Command="{Binding RedoCommand}"
                            AutomationProperties.AccessKey="CTRL + Y"
                            AutomationProperties.HelpText="Redo" x:Uid="AppBarButtonRedo">
                            <i:Interaction.Behaviors>
                                <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="Y" />
                            </i:Interaction.Behaviors>
                        </AppBarButton>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding Document, Converter={StaticResource NotNullVisibilityConverter}, FallbackValue=Collapsed}">
                    <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotRootToBooleanConverter}, FallbackValue=false}" Icon="Delete"
                        Command="{Binding RemoveCommand}"
                        AutomationProperties.AccessKey="Delete"
                        AutomationProperties.Name="Remove Node" x:Uid="AppBarButtonRemoveNode">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior Invoking="RemoveButton_Invoking" RequiresControlModifier="False" Key="Delete" />
                            <gpi:CommandShortcutBehavior Invoking="RemoveButton_Invoking" RequiresControlModifier="False" Key="Back" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>

                    <Rectangle Fill="{ThemeResource ApplicationForegroundThemeBrush}" Width="1" Margin="20" HorizontalAlignment="Stretch" />

                    <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotRootToBooleanConverter}, FallbackValue=false}" Icon="Add"
                        Command="{Binding AddSiblingCommand}" 
                        AutomationProperties.AccessKey="Control H"
                        AutomationProperties.Name="Add Sibling" x:Uid="AppBarButtonAddSibling">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="N" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>

                    <AppBarButton IsEnabled="{Binding Document.SelectedNode, Converter={StaticResource NotNullBooleanConverter}, FallbackValue=false}" Icon="Add"
                        Command="{Binding AddChildCommand}" 
                        AutomationProperties.AccessKey="Control N"
                        AutomationProperties.Name="Add Child" x:Uid="AppBarButtonAddChild">
                        <i:Interaction.Behaviors>
                            <gpi:CommandShortcutBehavior RequiresControlModifier="True" Key="M" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>
                </StackPanel>
            </Grid>
        </AppBar>

        
    </Grid>-->
</Page>
