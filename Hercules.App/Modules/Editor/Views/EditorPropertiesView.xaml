<UserControl x:Class="Hercules.App.Modules.Editor.Views.EditorPropertiesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:gpc="using:GP.Utils.UI.Controls"
    xmlns:gpi="using:GP.Utils.UI.Interactivity"
    xmlns:controls="using:Hercules.App.Controls"
    xmlns:model="using:Hercules.Model"
    xmlns:assets="using:Hercules.Model"
    mc:Ignorable="d"
    d:DesignHeight="1000"
    d:DesignWidth="400"
    DataContext="{Binding EditorProperties, Source={StaticResource ViewModelLocator}}" SizeChanged="EditorPropertiesView_OnSizeChanged">

    <UserControl.Resources>
        <controls:NodeIconBitmapConverter x:Key="NodeIconBitmapConverter" />

        <assets:SupportedIcons x:Key="SupportedIcons" />
        
        <Style x:Key="PropertySelectionStyleAuto" TargetType="GridViewItem">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Overlay" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}" SelectedBackground="{ThemeResource SystemControlHighlightAccentBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="PropertySelectionStyle" TargetType="GridViewItem">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Overlay" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}" SelectedBackground="{ThemeResource SystemControlHighlightAccentBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PropertyGridStyle" TargetType="GridView">
            <Setter Property="Padding" Value="0" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="GridViewItem">
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewItem">
                                    <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Overlay" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}" PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}" SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}" SelectedBackground="{ThemeResource SystemControlHighlightAccentBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SeparatorStyle" TargetType="Border">
            <Setter Property="Margin" Value="0,15,0,15" />
            <Setter Property="BorderBrush" Value="#CCCCCC" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>

        <Style x:Key="PropertyHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="{ThemeResource PivotHeaderItemFontFamily}" />
            <Setter Property="FontWeight" Value="{ThemeResource PivotHeaderItemThemeFontWeight}" />
            <Setter Property="CharacterSpacing" Value="{ThemeResource PivotHeaderItemCharacterSpacing}" />
            <Setter Property="Margin" Value="0,0,0,8" />
        </Style>
        
        <Style x:Key="BorderedSection" TargetType="Control">
            <Setter Property="BorderBrush" Value="#CCCCCC" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" HorizontalScrollMode="Disabled" HorizontalScrollBarVisibility="Hidden">
        <StackPanel x:Name="Root">
            <gpc:ExpandableContentControl x:Uid="Properties_NotesSection" Style="{StaticResource BorderedSection}" Header="Notes" IsExpanded="{x:Bind ViewModel.ShowNotesSection, Mode=TwoWay}">
                <StackPanel>
                    <Button x:Uid="Properties_ToggleNotesButton" 
                        Content="Show/Hide Notes" 
                        Command="{x:Bind ViewModel.ToggleNotesCommand}" />
                    </StackPanel>
            </gpc:ExpandableContentControl>

            <gpc:ExpandableContentControl x:Uid="Properties_ColorSection" Style="{StaticResource BorderedSection}" Header="Color" IsExpanded="{x:Bind ViewModel.ShowColorSection, Mode=TwoWay}">
                <StackPanel>
                    <GridView ItemsSource="{x:Bind ViewModel.ThemeColors}" Style="{StaticResource PropertyGridStyle}" Width="240" HorizontalAlignment="Left">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeColorCommand}" />
                            
                            <gpi:SelectionBehavior SelectedItem="{x:Bind ViewModel.SelectedNode.Color, Mode=OneWay}" SelectedItemCommand="{x:Bind ViewModel.ChangeColorCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="model:INodeColor">
                                <controls:ColorPresenter Color="{x:Bind}" Margin="2" Width="32" Height="32" Renderer="{Binding Path=DataContext.Renderer, ElementName=Root}" />
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    <GridView ItemsSource="{x:Bind ViewModel.CustomColors}" Style="{StaticResource PropertyGridStyle}" Width="240" HorizontalAlignment="Left">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeColorCommand}" />
                            
                            <gpi:SelectionBehavior SelectedItem="{x:Bind ViewModel.SelectedNode.Color, Mode=OneWay}" SelectedItemCommand="{x:Bind ViewModel.ChangeColorCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="model:INodeColor">
                                <controls:ColorPresenter Color="{x:Bind}" Margin="2" Width="32" Height="32" Renderer="{Binding Path=DataContext.Renderer, ElementName=Root}" />
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>

                    <gpc:ColorPickerButton x:Uid="Properties_ColorPickerButton" Command="{x:Bind ViewModel.AddColorCommand}" ButtonContent="Add" SelectionButtonContent="Select" Margin="0,10,0,0" />
                </StackPanel>
            </gpc:ExpandableContentControl>

            <gpc:ExpandableContentControl x:Uid="Properties_ShapeSection" Style="{StaticResource BorderedSection}" Header="Shape" IsExpanded="{x:Bind ViewModel.ShowShapeSection, Mode=TwoWay}">
                <StackPanel>
                    <GridView ItemContainerStyle="{StaticResource PropertySelectionStyle}" Style="{StaticResource PropertyGridStyle}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeShapeCommand}" />
                            
                            <gpi:SelectionBehavior SelectedIndexCommand="{x:Bind ViewModel.ChangeShapeCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.SelectedIndex>
                            <Binding Path="SelectedNode.Shape" Converter="{StaticResource ValueToIntConverter}" Mode="TwoWay">
                                <Binding.ConverterParameter>1</Binding.ConverterParameter>
                            </Binding>
                        </GridView.SelectedIndex>
                        <GridView.Items>
                            <Grid>
                                <TextBlock Text="Auto" FontSize="12" FontWeight="Bold" LineHeight="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Grid>

                            <Grid>
                                <TextBlock x:Name="EllipseFake" />
                                <Ellipse MaxHeight="20" Stroke="{x:Bind EllipseFake.Foreground, Mode=OneWay}" StrokeThickness="2" />
                            </Grid>

                            <Grid>
                                <TextBlock x:Name="RectangleFake" />
                                <Rectangle MaxHeight="20" Stroke="{x:Bind RectangleFake.Foreground, Mode=OneWay}" StrokeThickness="2" />
                            </Grid>

                            <Grid>
                                <TextBlock x:Name="RoundedRectangleFake" />
                                <Rectangle MaxHeight="20" Stroke="{x:Bind RoundedRectangleFake.Foreground, Mode=OneWay}" RadiusX="3" RadiusY="3" StrokeThickness="2" />
                            </Grid>

                            <StackPanel VerticalAlignment="Center">
                                <TextBlock x:Name="BorderText" Text="T" Height="16" FontSize="14" FontWeight="Bold" FontStyle="Italic" VerticalAlignment="Center" HorizontalAlignment="Center" />

                                <Rectangle Fill="{x:Bind BorderText.Foreground, Mode=OneWay}" Height="2" />
                            </StackPanel>
                        </GridView.Items>
                    </GridView>

                    <Border Style="{StaticResource SeparatorStyle}" />

                    <Button x:Uid="Properties_HullButton" 
                        Content="Toggle Hull" 
                        Command="{x:Bind ViewModel.ToggleHullCommand}" />
                </StackPanel>
            </gpc:ExpandableContentControl>

            <gpc:ExpandableContentControl x:Uid="Properties_IconSection" Style="{StaticResource BorderedSection}" Header="Icon" IsExpanded="{x:Bind ViewModel.ShowIconSection, Mode=TwoWay}">
                <StackPanel>
                    <GridView ItemsSource="{Binding None, Source={StaticResource SupportedIcons}}" SelectedIndex="0" Style="{StaticResource PropertyGridStyle}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeIconCommand}" />
                            
                            <gpi:SelectionBehavior SelectedItem="{x:Bind ViewModel.SelectedNode.Icon, Mode=OneWay}" SelectedItemCommand="{x:Bind ViewModel.ChangeIconCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="2">
                                    <Border Width="32" Height="32" BorderBrush="Red" BorderThickness="2" Background="White">
                                        <Line X1="0" X2="32" Y1="0" Y2="32" Stroke="Red" StrokeThickness="2" />
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    <ItemsControl ItemsSource="{Binding Categories, Source={StaticResource SupportedIcons}}" x:Name="AllIcons" HorizontalAlignment="Left" Width="240">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate x:DataType="model:IconCategory">
                                <GridView Margin="0,0,0,10" ItemsSource="{x:Bind Path=Icons}" Style="{StaticResource PropertyGridStyle}">
                                    <i:Interaction.Behaviors>
                                        <gpi:CommandEnabledBehavior Command="{Binding DataContext.ChangeIconCommand, ElementName=AllIcons}" />
                                        
                                        <gpi:SelectionBehavior SelectedItem="{Binding DataContext.SelectedNode.Icon, ElementName=AllIcons}" SelectedItemCommand="{Binding DataContext.ChangeIconCommand, ElementName=AllIcons}" />
                                    </i:Interaction.Behaviors>
                                    <GridView.ItemTemplate>
                                        <DataTemplate x:DataType="model:INodeIcon">
                                            <Grid Background="Transparent" Margin="2">
                                                <Image Source="{x:Bind Converter={StaticResource NodeIconBitmapConverter}}" Width="32" Height="32" />
                                            </Grid>
                                        </DataTemplate>
                                    </GridView.ItemTemplate>
                                </GridView>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <GridView ItemsSource="{x:Bind ViewModel.CustomIcons}" Style="{StaticResource PropertyGridStyle}" HorizontalAlignment="Left" Width="240">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeIconCommand}" />
                            
                            <gpi:SelectionBehavior SelectedItem="{x:Bind ViewModel.SelectedNode.Icon, Mode=OneWay}" SelectedItemCommand="{x:Bind ViewModel.ChangeIconCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="model:INodeIcon">
                                <Grid Background="Transparent" Margin="2">
                                    <Image Source="{x:Bind Converter={StaticResource NodeIconBitmapConverter}}" Width="32" Height="32" />
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>

                    <Button x:Uid="Properties_AddIconButton" 
                        Content="Open File" 
                        Command="{x:Bind ViewModel.AddIconCommand}" Margin="0,10,0,0" />

                    <TextBlock x:Uid="Properties_AddIconHint" 
                        Foreground="Gray"
                        FontSize="12"
                        TextWrapping="Wrap" Margin="0,6,0,0" 
                        Text="Icons Hint" LineHeight="16" />

                    <Border Style="{StaticResource SeparatorStyle}" />

                    <TextBlock x:Uid="Properties_IconPositionHeader" Text="Icon Position" 
                        Style="{StaticResource PropertyHeaderStyle}" />

                    <GridView SelectedIndex="{x:Bind ViewModel.SelectedNode.IconPosition, Converter={StaticResource ValueToIntConverter}, Mode=OneWay}" ItemContainerStyle="{StaticResource PropertySelectionStyle}" Style="{StaticResource PropertyGridStyle}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeIconPositionCommand}" />
                            
                            <gpi:SelectionBehavior SelectedIndexCommand="{x:Bind ViewModel.ChangeIconPositionCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.Items>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="LeftFake" />

                                <Ellipse Grid.Column="0" Width="12" Height="12" 
                                    Stroke="{x:Bind LeftFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                                <Rectangle Grid.Column="2" Fill="{x:Bind LeftFake.Foreground, Mode=OneWay}" Height="2" Width="12" />
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="RightFake" />

                                <Ellipse Grid.Column="2" Width="12" Height="12" 
                                    Stroke="{x:Bind RightFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                                <Rectangle Grid.Column="0" Fill="{x:Bind RightFake.Foreground, Mode=OneWay}" Height="2" Width="12" />
                            </Grid>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="2" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="TopFake" />

                                <Ellipse Grid.Row="0" Width="12" Height="12" 
                                    Stroke="{x:Bind TopFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                                <Rectangle Grid.Row="2" Fill="{x:Bind TopFake.Foreground, Mode=OneWay}" Height="2" Width="12" />
                            </Grid>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="2" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="BottomFake" />

                                <Ellipse Grid.Row="2" Width="12" Height="12" 
                                    Stroke="{x:Bind BottomFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                                <Rectangle Grid.Row="0" Fill="{x:Bind BottomFake.Foreground, Mode=OneWay}" Height="2" Width="12" />
                            </Grid>
                        </GridView.Items>
                    </GridView>

                    <Border Style="{StaticResource SeparatorStyle}" />

                    <TextBlock x:Uid="Properties_IconSizeHeader" Text="Icon Size" 
                        Style="{StaticResource PropertyHeaderStyle}" />

                    <GridView SelectedIndex="{x:Bind ViewModel.SelectedNode.IconSize, Converter={StaticResource ValueToIntConverter}, Mode=OneWay}" ItemContainerStyle="{StaticResource PropertySelectionStyle}" Style="{StaticResource PropertyGridStyle}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeIconSizeCommand}" />
                            
                            <gpi:SelectionBehavior SelectedIndexCommand="{x:Bind ViewModel.ChangeIconSizeCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.Items>
                            <Grid>
                                <TextBlock x:Name="SmallFake" />

                                <Rectangle Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                                    Stroke="{x:Bind SmallFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                            </Grid>

                            <Grid>
                                <TextBlock x:Name="MediumFake" />

                                <Rectangle Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                    Stroke="{x:Bind MediumFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                            </Grid>

                            <Grid>
                                <TextBlock x:Name="LargeFake" />

                                <Rectangle
                                    Stroke="{x:Bind LargeFake.Foreground, Mode=OneWay}" 
                                    StrokeThickness="2" />
                            </Grid>
                        </GridView.Items>
                    </GridView>
                </StackPanel>
            </gpc:ExpandableContentControl>
            <gpc:ExpandableContentControl x:Uid="Properties_CheckBoxesSection" Header="Checkboxes" IsExpanded="{x:Bind ViewModel.ShowCheckBoxesSection, Mode=OneWay}">
                <StackPanel>
                    <Button x:Uid="Properties_ToggleIsCheckableButton" 
                        Content="Show/Hide Checkboxes" 
                        Command="{x:Bind ViewModel.ToggleIsCheckableCommand}" />

                    <Border Style="{StaticResource SeparatorStyle}" />

                    <TextBlock x:Uid="Properties_ShowNodeCheckBoxes" Text="RenderNode Checkboxes" 
                        Style="{StaticResource PropertyHeaderStyle}" />

                    <GridView SelectedIndex="{x:Bind ViewModel.SelectedNode.CheckableMode, Converter={StaticResource ValueToIntConverter}, Mode=OneWay}" ItemContainerStyle="{StaticResource PropertySelectionStyleAuto}" Style="{StaticResource PropertyGridStyle}">
                        <i:Interaction.Behaviors>
                            <gpi:CommandEnabledBehavior Command="{x:Bind ViewModel.ChangeCheckableModeCommand}" />
                            
                            <gpi:SelectionBehavior SelectedIndexCommand="{x:Bind ViewModel.ChangeCheckableModeCommand}" />
                        </i:Interaction.Behaviors>
                        <GridView.Items>
                            <TextBlock x:Uid="Properties_CheckableDefault" Text="Default" />
                            <TextBlock x:Uid="Properties_CheckableEnabled" Text="Enabled" />
                            <TextBlock x:Uid="Properties_CheckableDisabled" Text="Disabled" />
                        </GridView.Items>
                    </GridView>

                    <TextBlock x:Uid="Properties_CheckBoxesHint" 
                        Foreground="Gray"
                        FontSize="12"
                        TextWrapping="Wrap" Margin="0,6,0,0" 
                        Text="Icons Hint" LineHeight="16" />
                </StackPanel>
            </gpc:ExpandableContentControl>
        </StackPanel>
    </ScrollViewer>
</UserControl>
