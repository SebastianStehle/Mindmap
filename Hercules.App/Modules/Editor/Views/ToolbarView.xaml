<UserControl x:Class="Hercules.App.Modules.Editor.Views.ToolbarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:e="using:Hercules.App.Modules.Editor.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:gpi="using:GP.Utils.UI.Interactivity"
    xmlns:controls="using:Hercules.App.Controls"
    mc:Ignorable="d"
    DataContext="{Binding Editor, Source={StaticResource ViewModelLocator}}">

    <CommandBar Background="{ThemeResource ThemedAppBarBackgroundBrush}" RequestedTheme="Dark">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Tablet">
                    <VisualState.Setters>
                        <Setter Target="PrimaryNotesButton.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryListButton.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryUndoRedoButtons.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryPropertiesButtonSeparator.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="CompactButtonRedo.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonUndo.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonExportSeparator.(UIElement.Visibility)" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.Setters>
                        <Setter Target="PrimaryNotesButton.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryListButton.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryUndoRedoButtons.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryAdvancedButtons.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryRemoveButtonSeparator.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="PrimaryPropertiesButtonSeparator.(UIElement.Visibility)" Value="Visible"/> 
                        <Setter Target="CompactButtonRedo.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonUndo.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonExportSeparator.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonExport.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonImport.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonHelpSeparator.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="CompactButtonHelp.(UIElement.Visibility)" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="860"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <i:Interaction.Behaviors>
            <gpi:AppBarButtonsBehavior />
        </i:Interaction.Behaviors>

        <CommandBar.Content>
            <StackPanel Orientation="Horizontal">
                <AppBarButton x:Name="PrimaryListButton" x:Uid="AppBarButton_ListMindmaps" Icon="List" Click="ListAppBarButton_Click" IsCompact="True" Label="Mindmaps" Visibility="Collapsed" />

                <StackPanel x:Name="PrimaryAdvancedButtons" Visibility="Collapsed" Orientation="Horizontal">
                    <AppBarSeparator />

                    <AppBarButton x:Uid="AppBarButton_Help" Icon="Help" IsCompact="True" Label="Help">
                        <AppBarButton.Flyout>
                            <controls:MindmapFlyout FlyoutPresenterStyle="{StaticResource LightFlyoutPresenterStyle}">
                                <e:HelpView MaxHeight="350" />
                            </controls:MindmapFlyout>
                        </AppBarButton.Flyout>
                        <i:Interaction.Behaviors>
                            <gpi:GlobalShortcutTriggerBehavior RequiresControlModifier="True" Key="H">
                                <gpi:ShowFlyoutAction />
                            </gpi:GlobalShortcutTriggerBehavior>
                            <gpi:GlobalShortcutTriggerBehavior RequiresControlModifier="True" Key="F1">
                                <gpi:ShowFlyoutAction />
                            </gpi:GlobalShortcutTriggerBehavior>
                            <gpi:GlobalShortcutTriggerBehavior Key="F1">
                                <gpi:ShowFlyoutAction />
                            </gpi:GlobalShortcutTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton x:Uid="AppBarButton_Export" IsCompact="True" Label="Export" IsEnabled="{Binding Document, Converter={StaticResource TrueWhenNotNullConverter}}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE898;"/>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutSubItem x:Uid="AppBarButton_ExportItem" Text="Export">
                                    <i:Interaction.Behaviors>
                                        <controls:ExportGeneratorBehavior EditorViewModel="{Binding}" />
                                    </i:Interaction.Behaviors>
                                </MenuFlyoutSubItem>

                                <MenuFlyoutItem x:Uid="AppBarButton_Print" Text="Print" Command="{Binding PrintCommand}" />
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton x:Uid="AppBarButton_Import" IsCompact="True" Label="Import">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE896;"/>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <i:Interaction.Behaviors>
                                    <controls:ImportGeneratorBehavior EditorViewModel="{Binding}" />
                                </i:Interaction.Behaviors>
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarSeparator />
                </StackPanel>

                <StackPanel x:Name="PrimaryUndoRedoButtons" Visibility="Collapsed" Orientation="Horizontal">
                    <AppBarButton x:Uid="AppBarButton_Undo" Icon="Undo" IsCompact="True" Label="Undo"
                        Command="{Binding UndoCommand}" />

                    <AppBarButton x:Uid="AppBarButton_Redo" Icon="Redo" IsCompact="True" Label="Redo"
                        Command="{Binding RedoCommand}" />
                </StackPanel>
            </StackPanel>
        </CommandBar.Content>
        <CommandBar.PrimaryCommands>
            <AppBarButton x:Uid="AppBarButton_RemoveNode" IsCompact="True" Label="Remove" Icon="Delete" 
                Command="{Binding RemoveCommand}">
            </AppBarButton>

            <AppBarSeparator x:Name="PrimaryRemoveButtonSeparator" Visibility="Collapsed" />
            
            <AppBarButton x:Uid="AppBarButton_ToggleNotes" IsCompact="True" Label="Notes" Icon="Edit" Visibility="Collapsed" x:Name="PrimaryNotesButton"
                Command="{Binding ToggleNotesCommand}">
            </AppBarButton>

            <AppBarButton x:Uid="AppBarButton_AddSibling" Style="{StaticResource AppBarButtonStyleSibling}" IsCompact="True" Label="Sibling"
                Command="{Binding AddSiblingCommand}">
            </AppBarButton>

            <AppBarButton x:Uid="AppBarButton_AddChild" Style="{StaticResource AppBarButtonStyleChild}" IsCompact="True" Label="Child"
                Command="{Binding AddChildCommand}">
            </AppBarButton>

            <AppBarSeparator x:Name="PrimaryPropertiesButtonSeparator" Visibility="Collapsed" />

            <AppBarButton x:Uid="AppBarButton_ToggleProperties" IsCompact="True" Label="Properties" Click="PropertiesButton_Click">
                <TextBlock TextAlignment="Center" FontSize="20" Text="&#xE2B1;" FontFamily="Segoe MDL2 Assets" />
            </AppBarButton>
        </CommandBar.PrimaryCommands>
        <CommandBar.SecondaryCommands>
            <AppBarButton x:Name="CompactButtonUndo" x:Uid="AppBarButton_Undo" Icon="Undo" Label="Undo"
                Command="{Binding UndoCommand}">
            </AppBarButton>

            <AppBarButton x:Name="CompactButtonRedo" x:Uid="AppBarButton_Redo" Icon="Redo" Label="Redo"
                Command="{Binding RedoCommand}">
            </AppBarButton>

            <AppBarSeparator x:Name="CompactButtonExportSeparator" />
            
            <AppBarButton x:Name="CompactButtonImport" x:Uid="AppBarButton_Import" Label="Import">
                <AppBarButton.Flyout>
                    <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DarkMenuFlyoutPresenterStyle}">
                        <i:Interaction.Behaviors>
                            <controls:ImportGeneratorBehavior EditorViewModel="{Binding}" />
                        </i:Interaction.Behaviors>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton x:Name="CompactButtonExport" x:Uid="AppBarButton_Share" Label="Export">
                <AppBarButton.Flyout>
                    <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DarkMenuFlyoutPresenterStyle}">
                        <MenuFlyoutSubItem x:Uid="AppBarButton_ExportItem" Text="Export">
                            <i:Interaction.Behaviors>
                                <controls:ExportGeneratorBehavior EditorViewModel="{Binding}" />
                            </i:Interaction.Behaviors>
                        </MenuFlyoutSubItem>
                        
                        <MenuFlyoutItem x:Uid="AppBarButton_Print" Text="Print" Command="{Binding PrintCommand}" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarSeparator x:Name="CompactButtonHelpSeparator" />

            <AppBarButton x:Name="CompactButtonHelp" x:Uid="AppBarButton_Help" Icon="Help" Label="Help">
                <AppBarButton.Flyout>
                    <controls:MindmapFlyout Placement="Full" FlyoutPresenterStyle="{StaticResource LightFlyoutPresenterStyle}">
                        <e:HelpView />
                    </controls:MindmapFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar.SecondaryCommands>
    </CommandBar>
</UserControl>
