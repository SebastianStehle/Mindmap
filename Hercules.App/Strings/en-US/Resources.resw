<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutText.Text" xml:space="preserve">
    <value>Copyright 2012 Sebastian Stehle, All Rights Reserved</value>
  </data>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddChildTransactionName" xml:space="preserve">
    <value>Add Child</value>
  </data>
  <data name="AddSiblingTransactionName" xml:space="preserve">
    <value>Add Sibling</value>
  </data>
  <data name="AppBarButtonAddChild.Label" xml:space="preserve">
    <value>Add Child</value>
  </data>
  <data name="AppBarButtonAddChild.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Add Child</value>
  </data>
  <data name="AppBarButtonAddChild.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Add child root (CTRL + M)</value>
  </data>
  <data name="AppBarButtonAddSibling.Label" xml:space="preserve">
    <value>Add Sibling</value>
  </data>
  <data name="AppBarButtonAddSibling.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Add Sibling</value>
  </data>
  <data name="AppBarButtonAddSibling.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Add sibiling root (CTRL + N)</value>
  </data>
  <data name="AppBarButtonChangeColor.Label" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="AppBarButtonChangeColor.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Change Color</value>
  </data>
  <data name="AppBarButtonChangeColor.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Change color of selected root</value>
  </data>
  <data name="AppBarButtonChangeIcon.Label" xml:space="preserve">
    <value>Icons</value>
  </data>
  <data name="AppBarButtonChangeIcon.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Change Icon</value>
  </data>
  <data name="AppBarButtonChangeIcon.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Change icon of selected root</value>
  </data>
  <data name="AppBarButtonEdit.Label" xml:space="preserve">
    <value>Mindmap</value>
  </data>
  <data name="AppBarButtonEdit.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="AppBarButtonEdit.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Edit mindmap (CTRL + E)</value>
  </data>
  <data name="AppBarButtonListMindmaps.Label" xml:space="preserve">
    <value>Mindmaps</value>
  </data>
  <data name="AppBarButtonListMindmaps.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Mindmaps</value>
  </data>
  <data name="AppBarButtonListMindmaps.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Show all Mindmaps (CNTR + L)</value>
  </data>
  <data name="AppBarButtonNewMindmap.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>New mindmap</value>
  </data>
  <data name="AppBarButtonNewMindmap.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>New mindmap (CTRL + SHIFT + N)</value>
  </data>
  <data name="AppBarButtonRedo.Label" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="AppBarButtonRedo.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Redo (CTRL + Y)</value>
  </data>
  <data name="AppBarButtonRemoveNode.Label" xml:space="preserve">
    <value>Delete Node</value>
  </data>
  <data name="AppBarButtonRemoveNode.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="AppBarButtonRemoveNode.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Remove selected root (DELETE)</value>
  </data>
  <data name="AppBarButtonSave.Label" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="AppBarButtonSave.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="AppBarButtonSave.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Export current mindmaps</value>
  </data>
  <data name="AppBarButtonUndo.Label" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="AppBarButtonUndo.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Undo (CTRL + Z)</value>
  </data>
  <data name="ChangeTextTransactionName" xml:space="preserve">
    <value>Change Text</value>
  </data>
  <data name="ClearIconButton.Content" xml:space="preserve">
    <value>Remove Icon</value>
  </data>
  <data name="ColorsHeader.Text" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="CreateButton.Content" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DeleteMindmapButton.Content" xml:space="preserve">
    <value>Delete Mindmap</value>
  </data>
  <data name="DeleteMindmapContent" xml:space="preserve">
    <value>Do you really want to delete the mindmap? It is not possible to restore a deleted mindmap.</value>
  </data>
  <data name="DeleteMindmapTitle" xml:space="preserve">
    <value>Delete Mindmap?</value>
  </data>
  <data name="EditColorTransactionName" xml:space="preserve">
    <value>Edit Color</value>
  </data>
  <data name="EditIconTransactionName" xml:space="preserve">
    <value>Edit Icon</value>
  </data>
  <data name="ExpandCollapseTransactionName" xml:space="preserve">
    <value>Toggle</value>
  </data>
  <data name="ExportHtml" xml:space="preserve">
    <value>Html (Outline)</value>
  </data>
  <data name="ExportImage" xml:space="preserve">
    <value>Image (.png)</value>
  </data>
  <data name="IconsHeader.Text" xml:space="preserve">
    <value>Icons</value>
  </data>
  <data name="InfoText.Text" xml:space="preserve">
    <value>Sebastian Stehle
Karlsruhe
Deutschland</value>
  </data>
  <data name="LastUpdateLabel.Text" xml:space="preserve">
    <value>Last Saved:</value>
  </data>
  <data name="MindmapItemDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="MindmapItemRename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="MindmapNameError.Text" xml:space="preserve">
    <value>Title cannot be empty!</value>
  </data>
  <data name="MindmapNameLabel.Text" xml:space="preserve">
    <value>Mindmap Title:</value>
  </data>
  <data name="MindmapsAddButton.Text" xml:space="preserve">
    <value>New Mindmap</value>
  </data>
  <data name="MindmapsHeader.Text" xml:space="preserve">
    <value>Mindmaps</value>
  </data>
  <data name="MoveNodeTransactionName" xml:space="preserve">
    <value>Move Node</value>
  </data>
  <data name="MyMindmap" xml:space="preserve">
    <value>My Mindmap</value>
  </data>
  <data name="NewMindmapNameError.Text" xml:space="preserve">
    <value>Title cannot be empty!</value>
  </data>
  <data name="NewMindmapNameLabel.Text" xml:space="preserve">
    <value>Enter Title:</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoText" xml:space="preserve">
    <value>[No Text]</value>
  </data>
  <data name="OutlineHeader.Text" xml:space="preserve">
    <value>Outline (Readonly)</value>
  </data>
  <data name="PinMindmapButton.Content" xml:space="preserve">
    <value>Pin to Start</value>
  </data>
  <data name="RemoveNodeTransactionName" xml:space="preserve">
    <value>Remove Node</value>
  </data>
  <data name="SettingsHeader.Text" xml:space="preserve">
    <value>Mindmap Settings</value>
  </data>
  <data name="ShareMindmapDescription" xml:space="preserve">
    <value>Share your mindmap '{0}' with friends or collegues.</value>
  </data>
  <data name="ShareMindmapFooter" xml:space="preserve">
    <value>This mindmap has been created with  &lt;a href="http://www.raven-mind.com"&gt;Mindmap&lt;/a&gt;.</value>
  </data>
  <data name="ShareMindmapTitle" xml:space="preserve">
    <value>Mindmap: {0}</value>
  </data>
  <data name="ShowAboutUs" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ShowTutorial" xml:space="preserve">
    <value>Show Tutorial</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Double Tap to Start</value>
  </data>
  <data name="SupportText.Text" xml:space="preserve">
    <value>Contact me by mail:</value>
  </data>
  <data name="SupportTitle.Text" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="ToggleHullTransactionName" xml:space="preserve">
    <value>Show Border</value>
  </data>
  <data name="Tutorial1Text.Text" xml:space="preserve">
    <value>Swipe down from the top corner and use the + button to create a new mindmap.</value>
  </data>
  <data name="Tutorial2Text.Text" xml:space="preserve">
    <value>Tap a root to select it and double tap to edit the text.</value>
  </data>
  <data name="Tutorial3Text.Text" xml:space="preserve">
    <value>Use the buttons at the right side to add or remove roots.</value>
  </data>
  <data name="Tutorial4Text.Text" xml:space="preserve">
    <value>You can also change the color of an root or add an icon.</value>
  </data>
  <data name="Tutorial5Text.Text" xml:space="preserve">
    <value>Use the Undo Command to revert your changes.</value>
  </data>
  <data name="UnpinMindmapButton.Content" xml:space="preserve">
    <value>Unpin from Start</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>