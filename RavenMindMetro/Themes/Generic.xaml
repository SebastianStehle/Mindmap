<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RavenMind.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:se="using:SE.Metro.UI"
    xmlns:sei="using:SE.Metro.UI.Interactivity">

    <local:NotNullNodeThicknessConverter x:Key="NotNullNodeThicknessConverter" />
    <local:NotNullRootThicknessConverter x:Key="NotNullRootThicknessConverter" />
    <se:NotNullVisibilityConverter x:Key="NotNullVisibilityConverter" />
    <se:VisibleWhenFalseConverter x:Key="VisibleWhenFalseConverter" />
    <se:VisibleWhenTrueConverter x:Key="VisibleWhenTrueConverter" />
    <se:IntToBrushConverter x:Key="IntToBrushConverter" />
    <se:IntToLightBrushConverter x:Key="IntToLightBrushConverter" />
    <se:IntToDarkBrushConverter x:Key="IntToDarkBrushConverter" />
    
    <Style x:Key="NoClearButtonTextBox" TargetType="TextBox">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible" />
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                        <ScrollViewer x:Name="ContentElement" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:Mindmap">
        <Setter Property="Renderer">
            <Setter.Value>
                <local:DefaultRenderer>
                    <local:DefaultRenderer.PathStyle>
                        <Style TargetType="Path">
                            <Setter Property="Stroke" Value="LightGray" />
                            <Setter Property="StrokeThickness" Value="2" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter Property="IsTapEnabled" Value="False" />
                        </Style>
                    </local:DefaultRenderer.PathStyle>
                    <local:DefaultRenderer.PathPreviewStyle>
                        <Style TargetType="Path">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="Stroke" Value="LightGray" />
                            <Setter Property="StrokeThickness" Value="2" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter Property="IsTapEnabled" Value="False" />
                        </Style>
                    </local:DefaultRenderer.PathPreviewStyle>
                    <local:DefaultRenderer.NodePreviewStyle>
                        <Style TargetType="local:NodeControl">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter Property="Height" Value="50" />
                            <Setter Property="Width" Value="80" />
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="AnchorPosition" Value="6,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="local:NodeControl">
                                        <Border Margin="6" Background="Black" Opacity="0.5" CornerRadius="4" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </local:DefaultRenderer.NodePreviewStyle>
                    <local:DefaultRenderer.RootStyle>
                        <Style TargetType="local:NodeControl">
                            <Setter Property="MinHeight" Value="70" />
                            <Setter Property="MinWidth" Value="80" />
                            <Setter Property="BorderBrush" Value="#444" />
                            <Setter Property="BorderBrush" Value="#333" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="local:NodeControl">
                                        <Grid>
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="Container">
                                                <Grid.RenderTransform>
                                                    <CompositeTransform />
                                                </Grid.RenderTransform>
                                                <Ellipse Margin="-6"
                                                    StrokeDashArray="2 1"
                                                    StrokeThickness="2" 
                                                    Stroke="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenTrueConverter}}" />

                                                <Ellipse Fill="DarkGray" Margin="2,2,-2,-2" Opacity="0.4" />

                                                <Ellipse IsHitTestVisible="False"
                                                    StrokeThickness="1" 
                                                    Stroke="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenFalseConverter}}"
                                                    Fill="{Binding AssociatedNode.Color, Converter={StaticResource IntToBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Ellipse IsHitTestVisible="False"
                                                    StrokeThickness="1" 
                                                    Stroke="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenTrueConverter}}"
                                                    Fill="{Binding AssociatedNode.Color, Converter={StaticResource IntToLightBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>

                                            <TextBox x:Name="TextBox" Style="{StaticResource NoClearButtonTextBox}" MinWidth="0" Padding="{Binding IconKey, Converter={StaticResource NotNullRootThicknessConverter}}" IsHitTestVisible="{TemplateBinding IsTextEditing}"
                                                Text="{Binding Text}"
                                                TextAlignment="Center" 
                                                Background="Transparent" 
                                                BorderBrush="Transparent"
                                                BorderThickness="0" />

                                            <Image Width="24" Height="24" Margin="10,0,0,0" HorizontalAlignment="Left" Source="{Binding IconKey, Mode=TwoWay}" Visibility="{Binding IconKey, Converter={StaticResource NotNullVisibilityConverter}}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </local:DefaultRenderer.RootStyle>
                    <local:DefaultRenderer.MainStyle>
                        <Style TargetType="local:NodeControl">
                            <Setter Property="AnchorPosition" Value="6,0" />
                            <Setter Property="MinHeight" Value="52" />
                            <Setter Property="MinWidth" Value="92" />
                            <Setter Property="BorderBrush" Value="#444" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="local:NodeControl">
                                        <Grid>
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="Container">
                                                <Grid.RenderTransform>
                                                    <CompositeTransform />
                                                </Grid.RenderTransform>

                                                <Rectangle
                                                    RadiusX="8"
                                                    RadiusY="8"
                                                    StrokeDashArray="2 1"
                                                    StrokeThickness="2" 
                                                    Stroke="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenTrueConverter}}">
                                                </Rectangle>

                                                <Grid Margin="6">
                                                    <Border CornerRadius="6" Background="DarkGray" Margin="2,2,-2,-2" Opacity="0.4" />

                                                    <Border CornerRadius="4" IsHitTestVisible="False"
                                                        BorderThickness="1" 
                                                        BorderBrush="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenFalseConverter}}"
                                                        Background="{Binding AssociatedNode.Color, Converter={StaticResource IntToBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <Border CornerRadius="4" IsHitTestVisible="False"
                                                        BorderThickness="1" 
                                                        BorderBrush="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenTrueConverter}}"
                                                        Background="{Binding AssociatedNode.Color, Converter={StaticResource IntToLightBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" />

                                                    <TextBox x:Name="TextBox" Style="{StaticResource NoClearButtonTextBox}" MinWidth="0" Padding="{Binding IconKey, Converter={StaticResource NotNullNodeThicknessConverter}}" IsHitTestVisible="{TemplateBinding IsTextEditing}"
                                                        Text="{Binding Text}"
                                                        TextAlignment="Center" 
                                                        Background="Transparent" 
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0" />

                                                    <Image Width="24" Height="24" Margin="10,0,0,0" HorizontalAlignment="Left" Source="{Binding IconKey, Mode=TwoWay}" Visibility="{Binding IconKey, Converter={StaticResource NotNullVisibilityConverter}}" />
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </local:DefaultRenderer.MainStyle>
                    <local:DefaultRenderer.NodeStyle>
                        <Style TargetType="local:NodeControl">
                            <Setter Property="AnchorPosition" Value="6,12" />
                            <Setter Property="MinHeight" Value="52" />
                            <Setter Property="MinWidth" Value="92" />
                            <Setter Property="BorderBrush" Value="#444" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="local:NodeControl">
                                        <Grid>
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="Container">
                                                <Grid.RenderTransform>
                                                    <CompositeTransform />
                                                </Grid.RenderTransform>

                                                <Rectangle
                                                    RadiusX="8"
                                                    RadiusY="8"
                                                    StrokeDashArray="2 1"
                                                    StrokeThickness="2" 
                                                    Stroke="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding AssociatedNode.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibleWhenTrueConverter}}">
                                                </Rectangle>

                                                <Grid Margin="6" Background="Transparent">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    
                                                    <Rectangle Height="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Fill="LightGray" Margin="0,15,0,0" />
                                                    
                                                    <TextBox x:Name="TextBox" Grid.RowSpan="2" Style="{StaticResource NoClearButtonTextBox}" MinWidth="0" Padding="{Binding IconKey, Converter={StaticResource NotNullNodeThicknessConverter}}" IsHitTestVisible="{TemplateBinding IsTextEditing}"
                                                        Text="{Binding Text}"
                                                        TextAlignment="Center" 
                                                        Background="Transparent" 
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0"
                                                        Foreground="{Binding AssociatedNode.Color, Converter={StaticResource IntToDarkBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" />

                                                    <Image Width="24" Height="24" Grid.RowSpan="2" Margin="10,0,0,0" HorizontalAlignment="Left" Source="{Binding IconKey, Mode=TwoWay}" Visibility="{Binding IconKey, Converter={StaticResource NotNullVisibilityConverter}}" />
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </local:DefaultRenderer.NodeStyle>
                </local:DefaultRenderer>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Mindmap">
                    <ScrollViewer ZoomMode="Enabled" x:Name="ScrollViewer" MaxZoomFactor="4"
                        VerticalScrollBarVisibility="Auto" 
                        HorizontalScrollBarVisibility="Auto" 
                        IsVerticalRailEnabled="False"
                        IsVerticalScrollChainingEnabled="False" 
                        IsHorizontalScrollChainingEnabled="False" 
                        IsHorizontalRailEnabled="False">
                        <i:Interaction.Behaviors>
                            <sei:ScrollViewerBringIntoViewInputPaneBehavior />
                        </i:Interaction.Behaviors>
                        <Grid Background="Transparent"  Width="5000" Height="5000">
                            <local:MindmapPanel x:Name="NodePanel" Background="Transparent" Document="{Binding Document}" Layout="{TemplateBinding Layout}" Renderer="{TemplateBinding Renderer}">
                                <i:Interaction.Behaviors>
                                    <sei:SwallowKeyArrowEventsBehavior />
                                </i:Interaction.Behaviors>
                            </local:MindmapPanel>
                            <Canvas x:Name="AdornerLayer" />
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
